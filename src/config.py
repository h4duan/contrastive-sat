import argparse

parser = argparse.ArgumentParser()
parser.add_argument('--task-name', type=str, default='neurosat', help='task name')

parser.add_argument('--dim', type=int, default=128, help='Dimension of variable and clause embeddings')
parser.add_argument('--n_rounds', type=int, default=26, help='Number of rounds of message passing')
parser.add_argument('--epochs', type=int, default=10)
parser.add_argument('--nvar_step', type=int, default=10, help='min number of variables used for training')
parser.add_argument('--min_n', type=int, default=10, help='min number of variables used for training')
parser.add_argument('--max_n', type=int, default=40, help='max number of variables used for training')
parser.add_argument('--batch_size', type=int, default=200)
parser.add_argument('--p_k_2', action='store', dest='p_k_2', type=float, default=0.3)
parser.add_argument('--p_geo', action='store', dest='p_geo', type=float, default=0.4)
parser.add_argument('--py_seed', action='store', dest='py_seed', type=int, default=None)
parser.add_argument('--np_seed', action='store', dest='np_seed', type=int, default=None)
parser.add_argument('--one', action='store', dest='one', type=int, default=0)
parser.add_argument('--num_batch', type=int, default=1)
parser.add_argument('--log_dir', type=str, help='log folder dir')
parser.add_argument('--model_dir', type=str, help='model folder dir')
parser.add_argument('--model_file', type=str)
parser.add_argument('--data_dir', type=str, help='data folder dir')
parser.add_argument('--restore', type=str, default=None, help='continue train from model')
parser.add_argument('--weight_decay', type=float, default=1e-10)
parser.add_argument('--data_source', type=str, default=None, help='train file dir')

parser.add_argument('--train-file', type=str, default=None, help='train file dir')
parser.add_argument('--val_folder', type=str, default=None, help='val file dir')
parser.add_argument('--val_label', type=str, default=None, help='val label file')
parser.add_argument('--val_n_vars', type=str, default=None, help='val n_vars file')
parser.add_argument('--val_instance', type=str, default=None, help='val var file name')
parser.add_argument('--val_num_data', type=str, default=None)
parser.add_argument('--job_id', type=str, default=None)
parser.add_argument('--test_size', type=int)
parser.add_argument('--num_workers', type=int, default=1)
parser.add_argument('--label_proportion', type=float)
#parser.add_argument('--model_file', type=str, default=None, help='val file dir')
parser.add_argument('--augment_file', type=str, default=None)
parser.add_argument('--augment_num_file', type=int, default=None)

#parser.add_argument('--supervised_augment', type=bool, help = 'supervised augmentation')
parser.add_argument('--print-screen', dest = "screen", action = "store_true")
parser.add_argument('--ssl', dest = "ssl", action = "store_true")
parser.add_argument('--num_ve', type=float, default=0.1)

parser.add_argument('--no-print-screen', dest = "screen", action = "store_false")
parser.add_argument('--compute_train_accuracy', dest = 'train_accuracy', action = "store_true")

parser.add_argument('--simclr', dest="simclr", action="store_true")
parser.add_argument('--vicreg', dest="vicreg", action="store_true")
parser.add_argument('--siamese', dest="siamese", action="store_true")
parser.add_argument('--simclr_tau', type=float, default=0.1)
parser.add_argument('--vicreg_lambda', type=float)
parser.add_argument('--vicreg_mu', type=float)
parser.add_argument('--vicreg_nu', type=float)

parser.add_argument('--neurosat', dest="neurosat", action="store_true")
parser.add_argument('--small', dest="small", action="store_true")
parser.add_argument('--neurodiver', dest="neurodiver", action="store_true")


parser.add_argument('--at_added_literal', type=float, default=0.0)
parser.add_argument('--at_added_clause', type=float, default=0.0)
parser.add_argument('--cr_added_resolv', type=float, default=0.0)
parser.add_argument('--ve_eliminate_var', type=float, default=0.1)
parser.add_argument('--ve_max_resolvent', type=float, default=1)

parser.add_argument('--gcl_del_clause_ratio', type=float, default=0.00)
parser.add_argument('--gcl_del_var_ratio', type=float, default=0.00)
parser.add_argument('--gcl_purt_link_ratio', type=float, default=0.20)
parser.add_argument('--gcl_subgraph_ratio', type=float, default=0.01)

parser.add_argument('--variable_elimination', type = float, default = 1)
parser.add_argument('--add_trivial', type = float, default = 1)
parser.add_argument('--clause_resolution', type = float, default = 1)
parser.add_argument('--blocked_clause', type = float, default = 1)
parser.add_argument('--subsume_clause', type = float, default = 1)

parser.add_argument('--gcl_clause_drop', type=float, default=0)
parser.add_argument('--gcl_var_drop', type=float, default=0)
parser.add_argument('--gcl_link_purt', type=float, default=0)
parser.add_argument('--gcl_subgraph', type=float, default=0)

parser.add_argument('--DFS', dest='DFS', action="store_true")

parser.add_argument('--test_epoch', type = int, default = 20)
parser.add_argument('--ve_pos_variable', type = int, default = 4)

parser.add_argument('--reverse_aug', dest='reverse_aug', action="store_true")
parser.add_argument('--debug', dest='debug', action="store_true")
parser.add_argument('--weight_share', dest='weight_share', action="store_true")
parser.add_argument('--residual', dest='residual', action="store_true")
parser.add_argument('--bipartite', dest='bipartite', action="store_true")
parser.add_argument('--learning_rate', type=float, default=0.00002)
parser.add_argument('--save_model', dest = 'save_model', action = "store_true")
parser.add_argument('--study_ve', dest = 'study_ve', action = "store_true")
parser.add_argument('--supervised_augment', dest = 'supervised_augment', action = "store_true")
parser.add_argument('--ve_small', dest = 've_small', action = "store_true")

parser.add_argument('--world_size', type=int, default=1)

parser.add_argument('--wandb_login' , type=str, default='49fcdbf0a6500043ff9402a8555c64a7351364d0')
parser.add_argument('--wandb_entity', type=str, default='sslsat')
parser.add_argument('--wandb_proj', type=str, default=None)

parser.set_defaults(screen=False)
parser.set_defaults(augment=False)
parser.set_defaults(ssl=False)
parser.set_defaults(train_accuracy=False)
parser.set_defaults(simclr=False)
parser.set_defaults(vicreg=False)
parser.set_defaults(reverse_aug=False)
parser.set_defaults(neurosat=False)
parser.set_defaults(neurodiver=False)
parser.set_defaults(debug=False)
parser.set_defaults(small=False)
parser.set_defaults(weight_share=False)
parser.set_defaults(residual=False)
parser.set_defaults(bipartite=False)
parser.set_defaults(save_model=False)
parser.set_defaults(siamese=False)
parser.set_defaults(study_ve=False)
parser.set_defaults(supervised_augment=False)
parser.set_defaults(ve_small=False)
parser.set_defaults(DFS=False)
